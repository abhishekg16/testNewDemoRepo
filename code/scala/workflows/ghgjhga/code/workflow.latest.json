{
  "metainfo" : {
    "id" : "1",
    "language" : "scala",
    "fabricId" : "3",
    "frontEndLanguage" : "scala",
    "udafs" : {
      "language" : "scala",
      "code" : "package udfs\n\nimport org.apache.spark.sql.expressions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\n\n/**\n  * Here you can define your custom aggregate functions.\n  *\n  * Make sure to register your `udafs` in the register_udafs function below.\n  *\n  * Example:\n  *\n  * object GeometricMean extends UserDefinedAggregateFunction {\n  *   // This is the input fields for your aggregate function.\n  *   override def inputSchema: org.apache.spark.sql.types.StructType =\n  *     StructType(StructField(\"value\", DoubleType) :: Nil)\n  *\n  *   // This is the internal fields you keep for computing your aggregate.\n  *   override def bufferSchema: StructType = StructType(\n  *     StructField(\"count\", LongType) ::\n  *     StructField(\"product\", DoubleType) :: Nil\n  *   )\n  *\n  *   // This is the output type of your aggregatation function.\n  *   override def dataType: DataType = DoubleType\n  *\n  *   override def deterministic: Boolean = true\n  *\n  *   // This is the initial value for your buffer schema.\n  *   override def initialize(buffer: MutableAggregationBuffer): Unit = {\n  *     buffer(0) = 0L\n  *     buffer(1) = 1.0\n  *   }\n  *\n  *   // This is how to update your buffer schema given an input.\n  *   override def update(buffer: MutableAggregationBuffer, input: Row): Unit = {\n  *     buffer(0) = buffer.getAs[Long](0) + 1\n  *     buffer(1) = buffer.getAs[Double](1) * input.getAs[Double](0)\n  *   }\n  *\n  *   // This is how to merge two objects with the bufferSchema type.\n  *   override def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = {\n  *     buffer1(0) = buffer1.getAs[Long](0) + buffer2.getAs[Long](0)\n  *     buffer1(1) = buffer1.getAs[Double](1) * buffer2.getAs[Double](1)\n  *   }\n  *\n  *   // This is where you output the final value, given the final value of your bufferSchema.\n  *   override def evaluate(buffer: Row): Any = {\n  *     math.pow(buffer.getDouble(1), 1.toDouble / buffer.getLong(0))\n  *   }\n  * }\n  *\n  */\n\n\nobject UDAFs {\n  /**\n    * Registers UDAFs with Spark SQL\n    */\n  def registerUDAFs(spark: SparkSession): Unit = {\n    /**\n      * Example:\n      *\n      * spark.udf.register(\"gm\", GeometricMean)\n      *\n      */\n\n\n  }\n}\n"
    },
    "codeMode" : "sparse",
    "buildSystem" : "maven"
  },
  "connections" : [ {
    "id" : "985",
    "source" : "Source_56639",
    "sourcePort" : "73069",
    "target" : "Filter_60022",
    "targetPort" : "96584"
  }, {
    "id" : "415",
    "source" : "Filter_60022",
    "sourcePort" : "81689",
    "target" : "Reformat_18396",
    "targetPort" : "93625"
  } ],
  "processes" : {
    "Source_56639" : {
      "id" : "Source_56639",
      "component" : "Source",
      "metadata" : {
        "label" : "Source_0",
        "slug" : "source_0",
        "x" : 556,
        "y" : 54,
        "language" : "scala",
        "phase" : 0
      },
      "ports" : {
        "inputs" : [ ],
        "outputs" : [ {
          "id" : "73069",
          "slug" : "out",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            } ]
          }
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "format" : "csv",
        "datasetTypes" : [ {
          "label" : "FILE",
          "value" : "File",
          "icon" : "File"
        }, {
          "label" : "WAREHOUSE",
          "value" : "Warehouse",
          "icon" : "File"
        }, {
          "label" : "CATALOG TABLE",
          "value" : "Database",
          "icon" : "Database"
        } ],
        "dataFormats" : [ {
          "label" : "CSV",
          "value" : "csv",
          "icon" : "Csv"
        }, {
          "label" : "JSON",
          "value" : "json",
          "icon" : "Json"
        }, {
          "label" : "PARQUET",
          "value" : "parquet",
          "icon" : "Parquet"
        }, {
          "label" : "AVRO",
          "value" : "avro",
          "icon" : "File"
        }, {
          "label" : "DELTA",
          "value" : "delta",
          "icon" : "Delta"
        }, {
          "label" : "ORC",
          "value" : "orc",
          "icon" : "File"
        }, {
          "label" : "TEXT",
          "value" : "text",
          "icon" : "Document"
        } ],
        "datasetId" : "125",
        "dataset" : {
          "path" : "dbfs:/Prophecy/abhishek@prophecy12.io/CustomersDatasetInput.csv",
          "separator" : ",",
          "inferSchema" : true,
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            } ]
          },
          "header" : true
        },
        "isNewDataset" : false,
        "datasetType" : "File"
      }
    },
    "Reformat_18396" : {
      "id" : "Reformat_18396",
      "component" : "Reformat",
      "metadata" : {
        "label" : "Reformat_0",
        "slug" : "reformat_0",
        "x" : 933,
        "y" : 37,
        "language" : "scala",
        "phase" : 0
      },
      "ports" : {
        "inputs" : [ {
          "id" : "93625",
          "slug" : "in"
        } ],
        "outputs" : [ {
          "id" : "11630",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ ],
        "expressions" : [ ]
      }
    },
    "Filter_60022" : {
      "id" : "Filter_60022",
      "component" : "Filter",
      "metadata" : {
        "label" : "Filter_0",
        "slug" : "filter_0",
        "x" : 738,
        "y" : 70,
        "language" : "scala",
        "phase" : 0
      },
      "ports" : {
        "inputs" : [ {
          "id" : "96584",
          "slug" : "in",
          "schema" : {
            "type" : "struct",
            "fields" : [ {
              "name" : "customer_id",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "first_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "last_name",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "phone",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "email",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "account_open_date",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "account_flags",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            }, {
              "name" : "country_code",
              "type" : "string",
              "nullable" : true,
              "metadata" : { }
            } ]
          }
        } ],
        "outputs" : [ {
          "id" : "81689",
          "slug" : "out"
        } ],
        "selectedInputFields" : [ ]
      },
      "properties" : {
        "columnsSelector" : [ ],
        "condition" : "(col(\"phone\") > 10) &&\n\n\n (col(\"phone\") > 10)",
        "cleanCondition" : {
          "format" : "scala",
          "expression" : "(col(\"phone\") > 10) &&\n\n\n (col(\"phone\") > 10)"
        }
      }
    }
  },
  "ports" : {
    "inputs" : [ ],
    "outputs" : [ ],
    "selectedInputFields" : [ ]
  }
}